#!/usr/bin/perl -w

#
# Print a profile as a tree
#

# EDG prologue

BEGIN {
  $ENV{"EDG_LOCATION"} ||= "/opt/edg";
  $ENV{"EDG_LOCATION_VAR"} ||= $ENV{"EDG_LOCATION"}."/var";
  unshift (@INC, $ENV{"EDG_LOCATION"}."/lib/perl");
}

use EDG::WP4::CCM::CacheManager qw ($DATA_DN $GLOBAL_LOCK_FN
                                      $CURRENT_CID_FN $LATEST_CID_FN);
use EDG::WP4::CCM::Path;
use EDG::WP4::CCM::Resource;
use EDG::WP4::CCM::Element;
use Getopt::Long;
use strict;

my ($depth);

sub search($);

sub search($) {

    my ($element) = shift;
    
    my ($i);
    
    for( $i=0 ; $i<$depth ; $i++ ) {
        print "  ";
    }

    if( $element->isProperty() ) {
	print "\$ " . $element->getName() . " : ";
	print "string ("  if $element->isType(EDG::WP4::CCM::Element::STRING);
	print "long ("    if $element->isType(EDG::WP4::CCM::Element::LONG);
	print "double ("  if $element->isType(EDG::WP4::CCM::Element::DOUBLE);
	print "boolean (" if $element->isType(EDG::WP4::CCM::Element::BOOLEAN);
	print $element->getValue() . ")\n";
	$depth--;
        return;
    }

    print "+-" . $element->getName() . "\n";

    while( $element->hasNextElement() ) {
        $depth++;
	search($element->getNextElement());
    }

    $depth--;
    return;

}

my ($cache_dir, $cid, $cred);
my ($cm, $config);
my ($path, $element);

$cache_dir  = "";
$cid = -1;
GetOptions('cache=s'  => \$cache_dir, 'cid=i'    => \$cid )
    or die("error processing command line: $!");

if (($cache_dir eq "") or ($cid == -1)) {
    die("use: $0 --cache cache_dir --cid cid\n");
}

$cred = 0;

$cm = EDG::WP4::CCM::CacheManager->new($cache_dir);
$config = $cm->getLockedConfiguration($cred, $cid);

$path = EDG::WP4::CCM::Path->new("/");
$element = $config->getElement($path);

$depth = 0;
search($element);

exit(0);
