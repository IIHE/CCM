#!/usr/bin/perl -w

#
# Example of use of the NVA-API library
# 
# another example of exceptions
#
# We try to search for some value in the configuration tree.
# It can exist in let say three different location (identified by paths
# We start with the first path, if the element with given path
# does not exist then we try next one and so on.
#
# for more information on exceptions please look into
# man pages of the LC::Exception package
#
# Piotr Poznanski <Piotr.Poznanski@cern.ch>
#

# EDG prologue

BEGIN {
  $ENV{"EDG_LOCATION"} ||= "/opt/edg";
  $ENV{"EDG_LOCATION_VAR"} ||= $ENV{"EDG_LOCATION"}."/var";
  unshift (@INC, $ENV{"EDG_LOCATION"}."/lib/perl");
}

use strict;
use EDG::WP4::CCM::CacheManager;
use LC::Exception qw (throw_error);

# create exception context that will store exceptions
# that we can intercept them and e.g. print their contents out

my $ec = LC::Exception::Context->new->will_store_errors;

# empty credentails
my $cred = 0;

# create new CacheManager (default cache will be used)
# check if the new method did not throw an exception
my $cm;

unless ($cm = EDG::WP4::CCM::CacheManager->new()) {
  print ("exception caught when calling: EDG::WP4::CCM::CacheManager->new()");
  print ("exception contents:\n".$ec->error);
}

# get (locked) current configuration
my $cfg;
unless ($cfg = $cm->getLockedConfiguration($cred)) {
  print ("exception caught when calling: $cm->getLockedConfiguration($cred)");
  print ("exception contents:\n".$ec->error);
}

# get element with path "path1" if the element does not
# exist, exception will be caught and next location checked

my $el = $cfg->getElement("/path1");

unless ($el) { 
  # exception was thrown, we assume that this was becasue 
  # the element was found, of course there may be other
  # possibilities of look-up failure (e.g. malformed path
  # or internal NVA-API error), for this we should
  # have to check the contents of the exception

  # we mark the exception as being checked (reported)
  $ec->error->has_been_reported(1);

  # we check next path

  $el = $cfg->getElement("/path2");

  unless ($el) {
    # again exception thrown, again assume that the element
    # was not found

    # we mark again the exception
    $ec->error->has_been_reported(1);

    # we check last path

    $el = $cfg->getElement("/path3");
  }
}

unless ($el) {
  # all of the three getElement failed.

  # we mark the exception
  $ec->error->has_been_reported(1);

  die ("element was not found at the locations: path1, path2, path3\n");
}

# print out the element's value
print $el->getPath()." => ".$el->getValue()."\n";
