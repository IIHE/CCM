#!/usr/bin/perl -w

use LC::File qw (file_contents);
use XML::Parser;
use Data::Compare;

my $fp  = "./edg-fetch"; #directory where fetch is installed
my $cfg = "";
my $cr = "/var/lib/ccm"; #root of the cache
my $tmp1 = "tmp1.xml";
my $tmp2 = "tmp2.xml";
my $tree1 = "tmp1.tree";
my $tree2 = "tmp2.tree";

sub exec_cmd ($) {
  my ($cmd) = @_;
  print "executing:\n-> $cmd\n";
  my $res = `$cmd`;
  print $res;
  return $res;
}

# test if xml that is put is equal to the xml produced through the 
# the api. it uses XML parser and compares the trees of the documents

sub test ($) {
  my ($profile) = @_;
  print "TESTING: $profile\n";
  $pwd = `pwd`; chop($pwd);
  my $f = exec_cmd ("$fp $cfg --profile file:$pwd/$profile");
  exec_cmd ("util/dumpxml $cr > $tmp1");
  my $p1 = new XML::Parser(Style => 'Tree');
  my $orig = $p1->parsefile($profile);
  my $read = $p1->parsefile($tmp1);
  my $cmp = Compare ($orig, $read);
  if ($cmp) {
    print "IDENTICAL\n";
  } else {
    print ("ORIGINAL:\n" . file_contents ($profile));
    print ("READ:\n" . file_contents ($tmp1));
  }
  
}

# xml -> fetch -> nva -> xml1 -> fetch -> nva -> xml2
# checks if xml1 == xml2

sub test1 ($) {
  my ($profile) = @_;
  print "TESTING: $profile\n";
  $pwd = `pwd`; chop($pwd);
  print "pwd: $pwd\n";
  my $f = exec_cmd ("$fp $cfg --profile file:$pwd/$profile");
  exec_cmd ("util/dumpxml $cr > $tmp1");
  $f = exec_cmd ("$fp $cfg --profile file:$pwd/$tmp1"); 
  exec_cmd ("util/dumpxml $cr > $tmp2");
  my $diff = exec_cmd ("diff $tmp1 $tmp2");
  if ($diff) {
    print ("ORIGINAL:\n" . file_contents ($profile));
    print ("TMP1:\n" . file_contents ($tmp1));
    print ("TMP2:\n" . file_contents ($tmp2));
  } else {
    print "IDENTICAL\n";
  }

}

#-d $fp or die ("fetch path did not found ($fp)");
-d $cr or die ("root of cache did not found ($cr)");

unless (@ARGV) {
  die ("usage: $0 profiles");
}

foreach my $profile (@ARGV) {
  test ($profile);
}

foreach my $profile (@ARGV) {
  test1 ($profile);
}
